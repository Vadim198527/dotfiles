(deftheme jetbrains-darcula
  "Created 2024-04-08.")

(custom-theme-set-faces
 'jetbrains-darcula
 '(font-lock-builtin-face ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(font-lock-comment-face ((((class color) (min-colors 89)) (:foreground "#8e9292" :italic t))))
 '(font-lock-negation-char-face ((((class color) (min-colors 89)) (:foreground "#9676ac"))))
 '(font-lock-reference-face ((((class color) (min-colors 89)) (:foreground "#9676ac"))))
 '(font-lock-constant-face ((((class color) (min-colors 89)) (:foreground "#9676ac"))))
 '(font-lock-doc-face ((((class color) (min-colors 89)) (:foreground "#5e8759"))))
 '(font-lock-function-name-face ((((class color) (min-colors 89)) (:foreground "#ffc66d" :bold nil))))
 '(font-lock-keyword-face ((((class color) (min-colors 89)) (:bold nil :foreground "#c57825"))))
 '(font-lock-string-face ((((class color) (min-colors 89)) (:foreground "#5e8759"))))
 '(font-lock-type-face ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(font-lock-variable-name-face ((((class color) (min-colors 89)) (:foreground "#9676ac"))))
 '(font-lock-warning-face ((((class color) (min-colors 89)) (:foreground "#8c0909" :background "#303030"))))
 '(region ((((class color) (min-colors 89)) (:background "#214283" :extend nil))))
 '(secondary-selection ((((class color) (min-colors 89)) (:inherit region))))
 '(highlight ((((class color) (min-colors 89)) (:foreground "#313335" :background "#e8e8e8"))))
 '(hl-line ((((class color) (min-colors 89)) (:background "#313335"))))
 '(fringe ((t (:background "#2b2b2b" :foreground "#fafafa"))))
 '(cursor ((((class color) (min-colors 89)) (:background "white"))))
 '(show-paren-match-face ((((class color) (min-colors 89)) (:background "#990000"))))
 '(show-paren-match ((t (:foreground "yellow" :background "#383c3f" :bold t))))
 '(show-paren-mismatch ((t (:background "#990000"))))
 '(isearch ((t (:foreground "#ffffff" :background "#5e8759"))))
 '(isearch-fail ((t (:foreground "#ffffff" :background "#8c0909"))))
 '(lazy-highlight ((t (:foreground "#ffffff" :background "#f1eb7f"))))
 '(vertical-border ((((class color) (min-colors 89)) (:foreground "#313335"))))
 '(minibuffer-prompt ((((class color) (min-colors 89)) (:foreground "#cccccc" :weight normal))))
 '(default-italic ((((class color) (min-colors 89)) (:italic t))))
 '(link ((((class color) (min-colors 89)) (:foreground "#7ca8c6" :underline t))))
 '(error ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(warning ((((class color) (min-colors 89)) (:foreground "#9676ac"))))
 '(success ((((class color) (min-colors 89)) (:foreground "#318495"))))
 '(dired-directory ((t (:inherit (font-lock-keyword-face)))))
 '(line-number ((((class color) (min-colors 89)) (:foreground "#606366" :background "#313335"))))
 '(line-number-current-line ((((class color) (min-colors 89)) (:foreground "#a9b7c6" :background "#313335"))))
 '(mode-line ((((class color) (min-colors 89)) (:bold nil :foreground "#fafafa" :background "#3c3f41"))))
 '(mode-line-inactive ((((class color) (min-colors 89)) (:bold nil :foreground "#a9b7c6" :background "#2c2f31"))))
 '(mode-line-buffer-id ((((class color) (min-colors 89)) (:bold nil :foreground "#ffffff" :background nil))))
 '(mode-line-highlight ((((class color) (min-colors 89)) (:foreground "#c57825" :box nil :weight normal))))
 '(mode-line-emphasis ((((class color) (min-colors 89)) (:foreground "#a9b7c6"))))
 '(company-tooltip ((t (:foreground "#cccccc" :background "#383c3f"))))
 '(company-preview-common ((t (:foreground unspecified :background "#383c3f"))))
 '(company-scrollbar-bg ((t (:background "#383c3f"))))
 '(company-scrollbar-fg ((t (:background "#111111"))))
 '(company-tooltip-common ((t (:foreground "#926297" :bold t))))
 '(company-tooltip-selection ((t (:background "#214283"))))
 '(company-tooltip-annotation ((t (:foreground "#5e8759"))))
 '(org-document-title ((((class color) (min-colors 89)) (:foreground "#c57825" :height 1.2 :bold t))))
 '(org-level-1 ((((class color) (min-colors 89)) (:bold nil :foreground "#c57825" :height 1.1))))
 '(org-level-2 ((((class color) (min-colors 89)) (:bold nil :foreground "#9676ac"))))
 '(org-level-3 ((((class color) (min-colors 89)) (:bold nil :foreground "#5e8759"))))
 '(org-level-4 ((((class color) (min-colors 89)) (:bold nil :foreground "#318495"))))
 '(org-code ((((class color) (min-colors 89)) (:foreground "#cccccc"))))
 '(org-hide ((((class color) (min-colors 89)) (:foreground "#fafafa"))))
 '(org-date ((((class color) (min-colors 89)) (:underline t :foreground "#5e8759"))))
 '(org-footnote ((((class color) (min-colors 89)) (:underline t :foreground "#fafafa"))))
 '(org-link ((((class color) (min-colors 89)) (:underline t :foreground "#c57825"))))
 '(org-special-keyword ((((class color) (min-colors 89)) (:foreground "#5e8759"))))
 '(org-block ((t (:extend t :background "#3A3C3E" :foreground "#cccccc"))))
 '(org-quote ((((class color) (min-colors 89)) (:inherit org-block :slant italic))))
 '(org-verse ((((class color) (min-colors 89)) (:inherit org-block :slant italic))))
 '(org-todo ((((class color) (min-colors 89)) (:box (:line-width 1 :color "#e8e8e8") :foreground "#c57825" :bold nil))))
 '(org-done ((((class color) (min-colors 89)) (:box (:line-width 1 :color "#313335") :bold nil :foreground "#383c3f"))))
 '(org-warning ((((class color) (min-colors 89)) (:underline t :foreground "#990000"))))
 '(org-agenda-structure ((((class color) (min-colors 89)) (:weight normal :foreground "#e8e8e8" :box (:color "#fafafa") :background "#313335"))))
 '(org-agenda-date ((((class color) (min-colors 89)) (:foreground "#9676ac" :height 1.1))))
 '(org-agenda-date-weekend ((((class color) (min-colors 89)) (:weight normal :foreground "#fafafa"))))
 '(org-agenda-date-today ((((class color) (min-colors 89)) (:weight normal :foreground "#c57825" :height 1.2))))
 '(org-agenda-done ((((class color) (min-colors 89)) (:foreground "#383c3f"))))
 '(org-scheduled ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(org-scheduled-today ((((class color) (min-colors 89)) (:foreground "#ffc66d" :weight normal :height 1.2))))
 '(org-ellipsis ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(org-verbatim ((((class color) (min-colors 89)) (:foreground "#fafafa"))))
 '(org-document-info-keyword ((((class color) (min-colors 89)) (:foreground "#5e8759"))))
 '(org-sexp-date ((((class color) (min-colors 89)) (:foreground "#fafafa"))))
 '(font-latex-bold-face ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(font-latex-italic-face ((((class color) (min-colors 89)) (:foreground "#d0d0ff" :italic t))))
 '(font-latex-string-face ((((class color) (min-colors 89)) (:foreground "#5e8759"))))
 '(font-latex-match-reference-keywords ((((class color) (min-colors 89)) (:foreground "#9676ac"))))
 '(font-latex-match-variable-keywords ((((class color) (min-colors 89)) (:foreground "#9676ac"))))
 '(ido-only-match ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(ido-subdir ((((class color) (min-colors 89)) (:weight normal :foreground "#8997a6"))))
 '(ido-first-match ((((class color) (min-colors 89)) (:foreground "#c57825" :bold nil))))
 '(gnus-header-content ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(gnus-header-from ((((class color) (min-colors 89)) (:foreground "#9676ac"))))
 '(gnus-header-name ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(gnus-header-subject ((((class color) (min-colors 89)) (:foreground "#ffc66d" :bold nil))))
 '(mu4e-view-url-number-face ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(mu4e-cited-1-face ((((class color) (min-colors 89)) (:foreground "#cccccc"))))
 '(mu4e-cited-7-face ((((class color) (min-colors 89)) (:foreground "#e8e8e8"))))
 '(mu4e-header-marks-face ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(ffap ((((class color) (min-colors 89)) (:foreground "#fafafa"))))
 '(js2-private-function-call ((((class color) (min-colors 89)) (:foreground "#9676ac"))))
 '(js2-jsdoc-html-tag-delimiter ((((class color) (min-colors 89)) (:foreground "#5e8759"))))
 '(js2-jsdoc-html-tag-name ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(js2-external-variable ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(js2-function-param ((((class color) (min-colors 89)) (:foreground "#9676ac"))))
 '(js2-jsdoc-value ((((class color) (min-colors 89)) (:foreground "#5e8759"))))
 '(js2-private-member ((((class color) (min-colors 89)) (:foreground "#e8e8e8"))))
 '(js2-warning ((t (:underline "#990000"))))
 '(js2-error ((t (:foreground "#990000" :weight normal))))
 '(js2-jsdoc-tag ((t (:foreground "#9676ac"))))
 '(js2-jsdoc-type ((t (:foreground "#9676ac"))))
 '(js2-instance-member ((t (:foreground "#9676ac"))))
 '(js2-object-property ((t (:foreground "#ffc66d"))))
 '(js2-magic-paren ((t (:foreground "#9676ac"))))
 '(js2-function-call ((t (:foreground "#9676ac"))))
 '(js2-keywords ((t (:foreground "#c57825"))))
 '(js3-warning-face ((((class color) (min-colors 89)) (:underline "#c57825"))))
 '(js3-error-face ((((class color) (min-colors 89)) (:underline "#990000"))))
 '(js3-external-variable-face ((((class color) (min-colors 89)) (:foreground "#9676ac"))))
 '(js3-function-param-face ((((class color) (min-colors 89)) (:foreground "#d0d0ff"))))
 '(js3-jsdoc-tag-face ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(js3-instance-member-face ((((class color) (min-colors 89)) (:foreground "#9676ac"))))
 '(ac-completion-face ((((class color) (min-colors 89)) (:underline t :foreground "#c57825"))))
 '(info-quoted-name ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(info-string ((((class color) (min-colors 89)) (:foreground "#5e8759"))))
 '(icompletep-determined ((((class color) (min-colors 89)) :foreground "#c57825")))
 '(slime-repl-inputed-output-face ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(trailing-whitespace ((((class color) (min-colors 89)) :foreground nil :background "#990000")))
 '(undo-tree-visualizer-current-face ((((class color) (min-colors 89)) :foreground "#c57825")))
 '(undo-tree-visualizer-default-face ((((class color) (min-colors 89)) :foreground "#cccccc")))
 '(undo-tree-visualizer-unmodified-face ((((class color) (min-colors 89)) :foreground "#9676ac")))
 '(undo-tree-visualizer-register-face ((((class color) (min-colors 89)) :foreground "#c57825")))
 '(rainbow-delimiters-depth-1-face ((((class color) (min-colors 89)) :foreground "gold")))
 '(rainbow-delimiters-depth-2-face ((((class color) (min-colors 89)) :foreground "orchid")))
 '(rainbow-delimiters-depth-3-face ((((class color) (min-colors 89)) :foreground "LightSkyBlue")))
 '(rainbow-delimiters-depth-4-face ((((class color) (min-colors 89)) :foreground "gold")))
 '(rainbow-delimiters-depth-5-face ((((class color) (min-colors 89)) :foreground "orchid")))
 '(rainbow-delimiters-depth-6-face ((((class color) (min-colors 89)) :foreground "LightSkyBlue")))
 '(rainbow-delimiters-depth-7-face ((((class color) (min-colors 89)) :foreground "gold")))
 '(rainbow-delimiters-depth-8-face ((((class color) (min-colors 89)) :foreground "orchid")))
 '(rainbow-delimiters-depth-9-face ((((class color) (min-colors 89)) :foreground "LightSkyBlue")))
 '(rainbow-delimiters-unmatched-face ((((class color) (min-colors 89)) :foreground "#990000")))
 '(magit-item-highlight ((((class color) (min-colors 89)) :background "#313335")))
 '(magit-hunk-heading ((((class color) (min-colors 89)) (:background "#313335"))))
 '(magit-hunk-heading-highlight ((((class color) (min-colors 89)) (:background "#313335"))))
 '(magit-bisect-bad ((t (:foreground "#8c0909"))))
 '(magit-bisect-good ((t (:foreground "#5e8759"))))
 '(magit-bisect-skip ((t (:foreground "#c57825"))))
 '(magit-blame-date ((t (:foreground "#8c0909"))))
 '(magit-blame-heading ((t (:foreground "#c57825" :background "#313335" :extend t))))
 '(magit-branch ((((class color) (min-colors 89)) (:foreground "#7ca8c6" :weight normal))))
 '(magit-branch-current ((t (:foreground "#7ca8c6"))))
 '(magit-branch-local ((t (:foreground "#318495"))))
 '(magit-branch-remote ((t (:foreground "#5e8759"))))
 '(magit-cherry-equivalent ((t (:foreground "#9676ac"))))
 '(magit-cherry-unmatched ((t (:foreground "#318495"))))
 '(magit-diff-context-highlight ((((class color) (min-colors 89)) (:background "#313335" :foreground "#e8e8e8"))))
 '(magit-diffstat-added ((t (:foreground "#5e8759"))))
 '(magit-diffstat-removed ((t (:foreground "#c57825"))))
 '(magit-dimmed ((t (:foreground "#8e9292"))))
 '(magit-filename ((t (:foreground "#9676ac"))))
 '(magit-hash ((t (:foreground "#8e9292"))))
 '(magit-header-line ((t (:inherit nil))))
 '(magit-log-author ((t (:foreground "#c57825"))))
 '(magit-log-date ((t (:foreground "#7ca8c6"))))
 '(magit-log-graph ((t (:foreground "#8e9292"))))
 '(magit-mode-line-process ((t (:foreground "#c57825"))))
 '(magit-mode-line-process-error ((t (:foreground "#8c0909"))))
 '(magit-process-ok ((t (:inherit success))))
 '(magit-process-ng ((t (:inherit error))))
 '(magit-reflog-amend ((t (:foreground "#9676ac"))))
 '(magit-reflog-checkout ((t (:foreground "#7ca8c6"))))
 '(magit-reflog-cherry-pick ((t (:foreground "#5e8759"))))
 '(magit-reflog-commit ((t (:foreground "#5e8759"))))
 '(magit-reflog-merge ((t (:foreground "#5e8759"))))
 '(magit-reflog-other ((t (:foreground "#318495"))))
 '(magit-reflog-rebase ((t (:foreground "#9676ac"))))
 '(magit-reflog-remote ((t (:foreground "#318495"))))
 '(magit-reflog-reset ((t (:inherit error))))
 '(magit-refname ((t (:foreground "#8e9292"))))
 '(magit-section-heading ((t (:foreground "#9676ac"))))
 '(magit-section-heading-selection ((t (:foreground "#c57825" :extend t))))
 '(magit-section-highlight ((t (:background "#313335" :extend t))))
 '(magit-sequence-drop ((t (:foreground "#8c0909"))))
 '(magit-sequence-head ((t (:foreground "#7ca8c6"))))
 '(magit-sequence-part ((t (:foreground "#c57825"))))
 '(magit-sequence-stop ((t (:foreground "#5e8759"))))
 '(magit-signature-bad ((t (:inherit error))))
 '(magit-signature-error ((t (:inherit error))))
 '(magit-signature-expijb-red ((t (:foreground "#c57825"))))
 '(magit-signature-good ((t (:inherit success))))
 '(magit-signature-revoked ((t (:foreground "#9676ac"))))
 '(magit-signature-untrusted ((t (:foreground "#318495"))))
 '(magit-tag ((t (:foreground "#ffc66d"))))
 '(term ((((class color) (min-colors 89)) (:foreground "#a9b7c6" :background "#2b2b2b"))))
 '(term-color-black ((((class color) (min-colors 89)) (:foreground "#a9b7c6" :background "#313335"))))
 '(term-color-blue ((((class color) (min-colors 89)) (:foreground "#7ca8c6" :background "#ffc66d"))))
 '(term-color-red ((((class color) (min-colors 89)) (:foreground "#8c0909" :background "#313335"))))
 '(term-color-green ((((class color) (min-colors 89)) (:foreground "#5e8759" :background "#313335"))))
 '(term-color-yellow ((((class color) (min-colors 89)) (:foreground "#ffc66d" :background "#9676ac"))))
 '(term-color-magenta ((((class color) (min-colors 89)) (:foreground "#c57825" :background "#c57825"))))
 '(term-color-cyan ((((class color) (min-colors 89)) (:foreground "#318495" :background "#5e8759"))))
 '(term-color-white ((((class color) (min-colors 89)) (:foreground "#cccccc" :background "#cccccc"))))
 '(helm-header ((((class color) (min-colors 89)) (:foreground "#cccccc" :background "#2b2b2b" :underline nil :box nil))))
 '(helm-source-header ((((class color) (min-colors 89)) (:foreground "#c57825" :background "#2b2b2b" :underline nil :weight normal))))
 '(helm-selection ((((class color) (min-colors 89)) (:background "#303030" :underline nil))))
 '(helm-selection-line ((((class color) (min-colors 89)) (:background "#303030"))))
 '(helm-visible-mark ((((class color) (min-colors 89)) (:foreground "#2b2b2b" :background "#313335"))))
 '(helm-candidate-number ((((class color) (min-colors 89)) (:foreground "#2b2b2b" :background "#a9b7c6"))))
 '(helm-separator ((((class color) (min-colors 89)) (:foreground "#c57825" :background "#2b2b2b"))))
 '(helm-time-zone-current ((((class color) (min-colors 89)) (:foreground "#c57825" :background "#2b2b2b"))))
 '(helm-time-zone-home ((((class color) (min-colors 89)) (:foreground "#c57825" :background "#2b2b2b"))))
 '(helm-buffer-not-saved ((((class color) (min-colors 89)) (:foreground "#c57825" :background "#2b2b2b"))))
 '(helm-buffer-process ((((class color) (min-colors 89)) (:foreground "#c57825" :background "#2b2b2b"))))
 '(helm-buffer-saved-out ((((class color) (min-colors 89)) (:foreground "#a9b7c6" :background "#2b2b2b"))))
 '(helm-buffer-size ((((class color) (min-colors 89)) (:foreground "#a9b7c6" :background "#2b2b2b"))))
 '(helm-ff-directory ((((class color) (min-colors 89)) (:foreground "#ffc66d" :background "#2b2b2b" :weight normal))))
 '(helm-ff-file ((((class color) (min-colors 89)) (:foreground "#a9b7c6" :background "#2b2b2b" :weight normal))))
 '(helm-ff-executable ((((class color) (min-colors 89)) (:foreground "#c57825" :background "#2b2b2b" :weight normal))))
 '(helm-ff-invalid-symlink ((((class color) (min-colors 89)) (:foreground "#d0d0ff" :background "#2b2b2b" :weight normal))))
 '(helm-ff-symlink ((((class color) (min-colors 89)) (:foreground "#c57825" :background "#2b2b2b" :weight normal))))
 '(helm-ff-prefix ((((class color) (min-colors 89)) (:foreground "#2b2b2b" :background "#c57825" :weight normal))))
 '(helm-grep-cmd-line ((((class color) (min-colors 89)) (:foreground "#a9b7c6" :background "#2b2b2b"))))
 '(helm-grep-file ((((class color) (min-colors 89)) (:foreground "#a9b7c6" :background "#2b2b2b"))))
 '(helm-grep-finish ((((class color) (min-colors 89)) (:foreground "#cccccc" :background "#2b2b2b"))))
 '(helm-grep-lineno ((((class color) (min-colors 89)) (:foreground "#a9b7c6" :background "#2b2b2b"))))
 '(helm-grep-match ((((class color) (min-colors 89)) (:foreground nil :background nil :inherit helm-match))))
 '(helm-grep-running ((((class color) (min-colors 89)) (:foreground "#ffc66d" :background "#2b2b2b"))))
 '(helm-moccur-buffer ((((class color) (min-colors 89)) (:foreground "#ffc66d" :background "#2b2b2b"))))
 '(helm-source-go-package-godoc-description ((((class color) (min-colors 89)) (:foreground "#5e8759"))))
 '(helm-bookmark-w3m ((((class color) (min-colors 89)) (:foreground "#c57825"))))
 '(web-mode-html-tag-bracket-face ((((class color) (min-colors 89)) (:foreground "#ffc66d"))))
 '(web-mode-html-tag-face ((((class color) (min-colors 89)) (:foreground "#ffc66d"))))
 '(web-mode-html-attr-name-face ((((class color) (min-colors 89)) (:foreground "#9676ac"))))
 '(web-mode-html-attr-value-face ((((class color) (min-colors 89)) (:foreground "#5e8759"))))
 '(web-mode-builtin-face ((((class color) (min-colors 89)) (:inherit font-lock-builtin-face))))
 '(web-mode-comment-face ((((class color) (min-colors 89)) (:inherit font-lock-comment-face))))
 '(web-mode-constant-face ((((class color) (min-colors 89)) (:inherit font-lock-constant-face))))
 '(web-mode-keyword-face ((((class color) (min-colors 89)) (:inherit font-lock-keyword-face))))
 '(web-mode-doctype-face ((((class color) (min-colors 89)) (:inherit font-lock-doc-face))))
 '(web-mode-function-name-face ((((class color) (min-colors 89)) (:inherit font-lock-function-name-face))))
 '(web-mode-string-face ((((class color) (min-colors 89)) (:inherit font-lock-string-face))))
 '(web-mode-type-face ((((class color) (min-colors 89)) (:inherit font-lock-type-face))))
 '(web-mode-warning-face ((((class color) (min-colors 89)) (:inherit font-lock-warning-face))))
 '(ediff-fine-diff-Ancestor ((t (:background "#885555"))))
 '(ediff-fine-diff-A ((t (:background "#885555"))))
 '(ediff-fine-diff-B ((t (:background "#558855"))))
 '(ediff-fine-diff-C ((t (:background "#555588"))))
 '(ediff-current-diff-Ancestor ((t (:background "#663333"))))
 '(ediff-current-diff-A ((t (:background "#663333"))))
 '(ediff-current-diff-B ((t (:background "#336633"))))
 '(ediff-current-diff-C ((t (:background "#333366"))))
 '(ediff-even-diff-Ancestor ((t (:background "#313335"))))
 '(ediff-even-diff-A ((t (:background "#313335"))))
 '(ediff-even-diff-B ((t (:background "#313335"))))
 '(ediff-even-diff-C ((t (:background "#313335"))))
 '(ediff-odd-diff-Ancestor ((t (:background "#313335"))))
 '(ediff-odd-diff-A ((t (:background "#313335"))))
 '(ediff-odd-diff-B ((t (:background "#313335"))))
 '(ediff-odd-diff-C ((t (:background "#313335"))))
 '(jde-java-font-lock-package-face ((t (:foreground "#9676ac"))))
 '(jde-java-font-lock-public-face ((t (:foreground "#c57825"))))
 '(jde-java-font-lock-private-face ((t (:foreground "#c57825"))))
 '(jde-java-font-lock-constant-face ((t (:foreground "#9676ac"))))
 '(jde-java-font-lock-modifier-face ((t (:foreground "#d0d0ff"))))
 '(jde-jave-font-lock-protected-face ((t (:foreground "#c57825"))))
 '(jde-java-font-lock-number-face ((t (:foreground "#9676ac"))))
 '(centaur-tabs-default ((t (:background "#2b2b2b" :foreground "#a9b7c6"))))
 '(centaur-tabs-selected ((t (:background "#2b2b2b" :foreground "#e8e8e8" :box nil))))
 '(centaur-tabs-unselected ((t (:background "#303030" :foreground "#8997a6" :box nil))))
 '(centaur-tabs-selected-modified ((t (:background "#303030" :foreground "#ffffff" :box nil))))
 '(centaur-tabs-unselected-modified ((t (:background "#303030" :foreground "#fafafa" :box nil))))
 '(centaur-tabs-active-bar-face ((t (:background "#ffffff" :box nil))))
 '(centaur-tabs-modified-marker-selected ((t (:inherit 'centaur-tabs-selected-modified :foreground "#ffffff" :box nil))))
 '(centaur-tabs-modified-marker-unselected ((t (:inherit 'centaur-tabs-unselected-modified :foreground "#ffffff" :box nil))))
 '(solaire-default-face ((t (:inherit default :background "#303030"))))
 '(solaire-minibuffer-face ((t (:inherit default :background "#303030"))))
 '(solaire-hl-line-face ((t (:inherit hl-line :background "#313335"))))
 '(solaire-org-hide-face ((t (:background "#303030" :inherit org-hide))))
 '(ivy-confirm-face ((t (:inherit minibuffer-prompt :foreground "#c57825"))))
 '(ivy-current-match ((t (:background "#214283" :extend t))))
 '(ivy-highlight-face ((t (:inherit font-lock-builtin-face))))
 '(ivy-match-required-face ((t (:inherit minibuffer-prompt :foreground "#990000"))))
 '(ivy-minibuffer-match-face-1 ((t (:inherit isearch))))
 '(ivy-minibuffer-match-face-2 ((t (:inherit ivy-minibuffer-match-face-1))))
 '(ivy-minibuffer-match-face-3 ((t (:inherit ivy-minibuffer-match-face-2))))
 '(ivy-minibuffer-match-face-4 ((t (:inherit ivy-minibuffer-match-face-2))))
 '(ivy-minibuffer-match-highlight ((t (:inherit ivy-current-match))))
 '(ivy-modified-buffer ((t (:inherit default :foreground "#9676ac"))))
 '(ivy-virtual ((t (:inherit default :foreground "#5e8759"))))
 '(ivy-posframe ((t (:background "#252526"))))
 '(counsel-key-binding ((t (:foreground "#9676ac"))))
 '(swiper-match-face-1 ((t (:inherit ivy-minibuffer-match-face-1))))
 '(swiper-match-face-2 ((t (:inherit ivy-minibuffer-match-face-2))))
 '(swiper-match-face-3 ((t (:inherit ivy-minibuffer-match-face-3))))
 '(swiper-match-face-4 ((t (:inherit ivy-minibuffer-match-face-4))))
 '(swiper-line-face ((t (:foreground "#8997a6" :background "#383c3f" :extend t))))
 '(git-gutter:added ((t (:background "#36a546" :foreground "#36a546" :weight normal))))
 '(git-gutter:deleted ((t (:background "#ac0909" :foreground "#ac0909" :weight normal))))
 '(git-gutter:modified ((t (:background "#f1eb7f" :foreground "#f1eb7f" :weight normal))))
 '(git-gutter-fr:added ((t (:background "#36a546" :foreground "#36a546" :weight normal))))
 '(git-gutter-fr:deleted ((t (:background "#ac0909" :foreground "#ac0909" :weight normal))))
 '(git-gutter-fr:modified ((t (:background "#f1eb7f" :foreground "#f1eb7f" :weight normal))))
 '(diff-hl-insert ((t (:background "#36a546" :foreground "#36a546"))))
 '(diff-hl-delete ((t (:background "#ac0909" :foreground "#ac0909"))))
 '(diff-hl-change ((t (:background "#f1eb7f" :foreground "#f1eb7f"))))
 '(neo-dir-link-face ((t (:foreground "#cccccc" :family "Sans Serif"))))
 '(neo-header-face ((t (:foreground "#cccccc" :family "Sans Serif"))))
 '(neo-banner-face ((t (:foreground "#cccccc" :family "Sans Serif"))))
 '(neo-root-dir-face ((t (:foreground "#cccccc" :family "Sans Serif"))))
 '(neo-file-link-face ((t (:foreground "#aaaaaa" :family "Sans Serif"))))
 '(neo-expand-btn-face ((t (:foreground "#aaaaaa"))))
 '(sml/global ((t (:foreground "#a9b7c6" :weight normal))))
 '(sml/filename ((t (:foreground "#a9b7c6" :weight normal))))
 '(sml/prefix ((t (:foreground "#a9b7c6" :weight normal))))
 '(sml/read-only ((t (:foreground "#a9b7c6" :weight normal))))
 '(sml/modes ((t (:foreground "#a9b7c6" :weight normal))))
 '(sml/modified ((t (:foreground "#e8e8e8" :weight normal))))
 '(tab-bar ((t (:background "#313335"))))
 '(tab-bar-tab ((t (:foreground "#cccccc" :background "#515757" :box (:color "#383c3f")))))
 '(tab-bar-tab-inactive ((t (:foreground "#a9b7c6" :background "#303030" :box (:color "#383c3f")))))
 '(evil-ex-substitute-matches ((t (:foreground "#990000" :weight normal :strike-through t))))
 '(evil-ex-substitute-replacement ((t (:foreground "#318495" :weight normal))))
 '(hl-todo ((t (:inverse-video t))))
 '(highlight-numbers-number ((t (:foreground "#7ca8c6"))))
 '(highlight-operators-face ((t (:inherit default))))
 '(highlight-symbol-face ((t (:background "#354a32"))))
 '(default ((((class color) (min-colors 89)) (:background "#2b2b2b" :foreground "#a9b7c6")))))

(provide-theme 'jetbrains-darcula)
