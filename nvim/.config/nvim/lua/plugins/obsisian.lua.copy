return {
	{
		"obsidian-nvim/obsidian.nvim",
		version = "*", -- Рекомендуется для стабильности (последний релиз)
		lazy = true, -- Ленивая загрузка
		ft = "markdown", -- Загружать только для Markdown-файлов
		dependencies = {
			"nvim-lua/plenary.nvim", -- Обязательно
			"Saghen/blink.cmp", -- Для blink.cmp поддержки
			"nvim-telescope/telescope.nvim",
			-- "ibhagwan/fzf-lua", -- Альтернатива Telescope
			-- "echasnovski/mini.pick", -- Ещё альтернатива
			-- Опционально: для улучшенной подсветки
			"nvim-treesitter/nvim-treesitter",
		},
		opts = {
			workspaces = {
				{
					name = "personal",
					path = "~/Desktop/Obsid_vault",
					-- Опционально: переопределения для этого vault
					overrides = {
						notes_subdir = "notes", -- Подпапка для новых нот
					},
				},
			},
			completion = {
				-- nvim_cmp = true, -- Включить автокомплит через nvim-cmp, если нужно
				blink = true, -- Включить автокомплит через blink.cmp
				min_chars = 2, -- Минимум символов для триггера
				create_new = true, -- Разрешить создание новых нот в пикере
			},
			legacy_commands = false, -- Отключить устаревшие команды
			checkbox = {
				order = { " ", "x", ">", "~" }, -- Порядок циклов для чекбоксов
			},
			ui = {
				enable = true, -- Включить UI-элементы (подсветка чекбоксов)
				checkboxes = {
					-- Кастомные символы и подсветка для состояний чекбоксов
					[" "] = { char = "󰄱", hl_group = "ObsidianTodo" }, -- Unchecked
					["x"] = { char = "✓", hl_group = "ObsidianDone" }, -- Checked
					[">"] = { char = "▶", hl_group = "ObsidianRightArrow" }, -- Scheduled
					["~"] = { char = "⏳", hl_group = "ObsidianTilde" }, -- In progress
					-- Добавьте больше состояний по желанию
				},
				-- Подсветка заголовков и других элементов (использует Treesitter)
				hl_groups = {
					ObsidianTodo = { bold = true, fg = "#f78c6c" },
					ObsidianDone = { bold = true, fg = "#89ddff" },
					-- ... другие группы
				},
			},
			callbacks = {
				-- Клавиатурные привязки теперь через callback для буферов Markdown
				enter_note = function(client, note)
					local function autolist_cr()
						local line = vim.api.nvim_get_current_line()
						local indent = line:match("^%s*")
						local list_marker = line:match("^%s*([-%+*])%s")
						local checkbox = line:match("^%s*([-%+*])%s%[%s?%]$")
						if checkbox then
							vim.api.nvim_input("<CR>" .. indent .. list_marker .. " [ ] ")
						elseif list_marker then
							vim.api.nvim_input("<CR>" .. indent .. list_marker .. " ")
						else
							vim.api.nvim_input("<CR>")
						end
					end
					local function autolist_down()
						local lnum = vim.api.nvim_win_get_cursor(0)[1]
						local line = vim.api.nvim_buf_get_lines(0, lnum - 1, lnum, false)[1]
						local indent = line:match("^%s*")
						local list_marker = line:match("^%s*([-%+*])%s")
						local checkbox = line:match("^%s*([-%+*])%s%[%s?%]$")
						vim.cmd("normal! o")
						if checkbox then
							vim.api.nvim_set_current_line(indent .. list_marker .. " [ ] ")
						elseif list_marker then
							vim.api.nvim_set_current_line(indent .. list_marker .. " ")
						end
					end
					local function autolist_up()
						local lnum = vim.api.nvim_win_get_cursor(0)[1]
						local line = vim.api.nvim_buf_get_lines(0, lnum - 1, lnum, false)[1]
						local indent = line:match("^%s*")
						local list_marker = line:match("^%s*([-%+*])%s")
						local checkbox = line:match("^%s*([-%+*])%s%[%s?%]$")
						vim.cmd("normal! O")
						if checkbox then
							vim.api.nvim_set_current_line(indent .. list_marker .. " [ ] ")
						elseif list_marker then
							vim.api.nvim_set_current_line(indent .. list_marker .. " ")
						end
					end
					-- Маппинги для автоматического продолжения списков
					vim.keymap.set("i", "<CR>", autolist_cr, { buffer = note.bufnr, desc = "Autolist Enter" })
					vim.keymap.set("n", "o", autolist_down, { buffer = note.bufnr, desc = "Autolist new line below" })
					vim.keymap.set("n", "O", autolist_up, { buffer = note.bufnr, desc = "Autolist new line above" })
					-- Toggle checkbox
					vim.keymap.set("n", "<leader>ch", "<cmd>Obsidian toggle_checkbox<cr>", {
						buffer = note.bufnr,
						desc = "Toggle checkbox",
					})
					-- Follow link (gf passthrough)
					vim.keymap.set("n", "gf", function()
						return require("obsidian").util.gf_passthrough()
					end, {
						noremap = false,
						expr = true,
						buffer = note.bufnr,
						desc = "Follow link",
					})
					-- New note
					vim.keymap.set("n", "<leader>on", "<cmd>Obsidian new<cr>", {
						buffer = note.bufnr,
						desc = "New note",
					})
					-- Promote heading (уменьшить уровень: удалить #)
					vim.keymap.set("n", "<leader>hp", function()
						vim.cmd("s/^#\\+ /# /")
					end, {
						buffer = note.bufnr,
						desc = "Promote heading (decrease level)",
					})
					-- Demote heading (увеличить уровень: добавить #)
					vim.keymap.set("n", "<leader>hd", function()
						vim.cmd("s/^\\(#* \\)/#\\1/")
					end, {
						buffer = note.bufnr,
						desc = "Demote heading (increase level)",
					})
				end,
			},
		},
	},
}
